/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface ServiceBridgeInterface extends ethers.utils.Interface {
  functions: {
    "addBridgePair(string,string,address,string,address)": FunctionFragment;
    "deleteBridge(string)": FunctionFragment;
    "getAllBridgePairs()": FunctionFragment;
    "getAllTokenPairs()": FunctionFragment;
    "getBridge(string)": FunctionFragment;
    "getTotalTokensNum()": FunctionFragment;
    "updateParentTokenList(string)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addBridgePair",
    values: [string, string, string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "deleteBridge",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getAllBridgePairs",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAllTokenPairs",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getBridge", values: [string]): string;
  encodeFunctionData(
    functionFragment: "getTotalTokensNum",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "updateParentTokenList",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "addBridgePair",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deleteBridge",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAllBridgePairs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAllTokenPairs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getBridge", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getTotalTokensNum",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateParentTokenList",
    data: BytesLike
  ): Result;

  events: {};
}

export class ServiceBridge extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: ServiceBridgeInterface;

  functions: {
    addBridgePair(
      _name: string,
      _parentBridgeName: string,
      _parentBridgeAddress: string,
      _childBridgeName: string,
      _childBridgeAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    deleteBridge(
      key: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getAllBridgePairs(
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          string,
          string,
          string,
          string,
          string,
          string,
          ([
            [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            },
            [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            }
          ] & {
            parentToken: [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            };
            childToken: [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            };
          })[]
        ] & {
          key: string;
          name: string;
          parentBridgeName: string;
          parentBridgeAddress: string;
          childBridgeName: string;
          childBridgeAddress: string;
          tokenPairs: ([
            [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            },
            [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            }
          ] & {
            parentToken: [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            };
            childToken: [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            };
          })[];
        })[]
      ] & {
        brigePairs: ([
          string,
          string,
          string,
          string,
          string,
          string,
          ([
            [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            },
            [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            }
          ] & {
            parentToken: [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            };
            childToken: [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            };
          })[]
        ] & {
          key: string;
          name: string;
          parentBridgeName: string;
          parentBridgeAddress: string;
          childBridgeName: string;
          childBridgeAddress: string;
          tokenPairs: ([
            [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            },
            [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            }
          ] & {
            parentToken: [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            };
            childToken: [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            };
          })[];
        })[];
      }
    >;

    getAllTokenPairs(
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          },
          [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          }
        ] & {
          parentToken: [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          };
          childToken: [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          };
        })[]
      ]
    >;

    getBridge(
      key: string,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string,
          string,
          string,
          string,
          string,
          string,
          ([
            [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            },
            [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            }
          ] & {
            parentToken: [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            };
            childToken: [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            };
          })[]
        ] & {
          key: string;
          name: string;
          parentBridgeName: string;
          parentBridgeAddress: string;
          childBridgeName: string;
          childBridgeAddress: string;
          tokenPairs: ([
            [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            },
            [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            }
          ] & {
            parentToken: [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            };
            childToken: [string, number, string, string, BigNumber] & {
              tokenAddress: string;
              tokenType: number;
              name: string;
              symbol: string;
              decimals: BigNumber;
            };
          })[];
        }
      ]
    >;

    getTotalTokensNum(overrides?: CallOverrides): Promise<[BigNumber]>;

    updateParentTokenList(
      key: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  addBridgePair(
    _name: string,
    _parentBridgeName: string,
    _parentBridgeAddress: string,
    _childBridgeName: string,
    _childBridgeAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  deleteBridge(
    key: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getAllBridgePairs(
    overrides?: CallOverrides
  ): Promise<
    ([
      string,
      string,
      string,
      string,
      string,
      string,
      ([
        [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        },
        [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        }
      ] & {
        parentToken: [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        };
        childToken: [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        };
      })[]
    ] & {
      key: string;
      name: string;
      parentBridgeName: string;
      parentBridgeAddress: string;
      childBridgeName: string;
      childBridgeAddress: string;
      tokenPairs: ([
        [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        },
        [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        }
      ] & {
        parentToken: [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        };
        childToken: [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        };
      })[];
    })[]
  >;

  getAllTokenPairs(
    overrides?: CallOverrides
  ): Promise<
    ([
      [string, number, string, string, BigNumber] & {
        tokenAddress: string;
        tokenType: number;
        name: string;
        symbol: string;
        decimals: BigNumber;
      },
      [string, number, string, string, BigNumber] & {
        tokenAddress: string;
        tokenType: number;
        name: string;
        symbol: string;
        decimals: BigNumber;
      }
    ] & {
      parentToken: [string, number, string, string, BigNumber] & {
        tokenAddress: string;
        tokenType: number;
        name: string;
        symbol: string;
        decimals: BigNumber;
      };
      childToken: [string, number, string, string, BigNumber] & {
        tokenAddress: string;
        tokenType: number;
        name: string;
        symbol: string;
        decimals: BigNumber;
      };
    })[]
  >;

  getBridge(
    key: string,
    overrides?: CallOverrides
  ): Promise<
    [
      string,
      string,
      string,
      string,
      string,
      string,
      ([
        [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        },
        [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        }
      ] & {
        parentToken: [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        };
        childToken: [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        };
      })[]
    ] & {
      key: string;
      name: string;
      parentBridgeName: string;
      parentBridgeAddress: string;
      childBridgeName: string;
      childBridgeAddress: string;
      tokenPairs: ([
        [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        },
        [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        }
      ] & {
        parentToken: [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        };
        childToken: [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        };
      })[];
    }
  >;

  getTotalTokensNum(overrides?: CallOverrides): Promise<BigNumber>;

  updateParentTokenList(
    key: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addBridgePair(
      _name: string,
      _parentBridgeName: string,
      _parentBridgeAddress: string,
      _childBridgeName: string,
      _childBridgeAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    deleteBridge(key: string, overrides?: CallOverrides): Promise<void>;

    getAllBridgePairs(
      overrides?: CallOverrides
    ): Promise<
      ([
        string,
        string,
        string,
        string,
        string,
        string,
        ([
          [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          },
          [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          }
        ] & {
          parentToken: [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          };
          childToken: [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          };
        })[]
      ] & {
        key: string;
        name: string;
        parentBridgeName: string;
        parentBridgeAddress: string;
        childBridgeName: string;
        childBridgeAddress: string;
        tokenPairs: ([
          [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          },
          [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          }
        ] & {
          parentToken: [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          };
          childToken: [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          };
        })[];
      })[]
    >;

    getAllTokenPairs(
      overrides?: CallOverrides
    ): Promise<
      ([
        [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        },
        [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        }
      ] & {
        parentToken: [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        };
        childToken: [string, number, string, string, BigNumber] & {
          tokenAddress: string;
          tokenType: number;
          name: string;
          symbol: string;
          decimals: BigNumber;
        };
      })[]
    >;

    getBridge(
      key: string,
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        string,
        string,
        string,
        string,
        string,
        ([
          [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          },
          [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          }
        ] & {
          parentToken: [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          };
          childToken: [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          };
        })[]
      ] & {
        key: string;
        name: string;
        parentBridgeName: string;
        parentBridgeAddress: string;
        childBridgeName: string;
        childBridgeAddress: string;
        tokenPairs: ([
          [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          },
          [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          }
        ] & {
          parentToken: [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          };
          childToken: [string, number, string, string, BigNumber] & {
            tokenAddress: string;
            tokenType: number;
            name: string;
            symbol: string;
            decimals: BigNumber;
          };
        })[];
      }
    >;

    getTotalTokensNum(overrides?: CallOverrides): Promise<BigNumber>;

    updateParentTokenList(
      key: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    addBridgePair(
      _name: string,
      _parentBridgeName: string,
      _parentBridgeAddress: string,
      _childBridgeName: string,
      _childBridgeAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    deleteBridge(
      key: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getAllBridgePairs(overrides?: CallOverrides): Promise<BigNumber>;

    getAllTokenPairs(overrides?: CallOverrides): Promise<BigNumber>;

    getBridge(key: string, overrides?: CallOverrides): Promise<BigNumber>;

    getTotalTokensNum(overrides?: CallOverrides): Promise<BigNumber>;

    updateParentTokenList(
      key: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addBridgePair(
      _name: string,
      _parentBridgeName: string,
      _parentBridgeAddress: string,
      _childBridgeName: string,
      _childBridgeAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    deleteBridge(
      key: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getAllBridgePairs(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getAllTokenPairs(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getBridge(
      key: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTotalTokensNum(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    updateParentTokenList(
      key: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
