/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721Burnable,
  ERC721BurnableInterface,
} from "../ERC721Burnable";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "to",
        type: "address",
      },
      {
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
      {
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address",
      },
      {
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
];

const _bytecode =
  "0x608060405261001a6301ffc9a760e01b61003560201b60201c565b6100306380ac58cd60e01b61003560201b60201c565b610103565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156100c657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b610fc7806101126000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c806342966c6811610081578063a22cb4651161005b578063a22cb46514610266578063b88d4fde14610294578063e985e9c51461035a576100c9565b806342966c68146101f45780636352211e1461021157806370a082311461022e576100c9565b8063095ea7b3116100b2578063095ea7b31461015a57806323b872dd1461018857806342842e0e146101be576100c9565b806301ffc9a7146100ce578063081812fc14610121575b600080fd5b61010d600480360360208110156100e457600080fd5b50357fffffffff0000000000000000000000000000000000000000000000000000000016610388565b604080519115158252519081900360200190f35b61013e6004803603602081101561013757600080fd5b50356103bf565b604080516001600160a01b039092168252519081900360200190f35b6101866004803603604081101561017057600080fd5b506001600160a01b038135169060200135610424565b005b6101866004803603606081101561019e57600080fd5b506001600160a01b03813581169160208101359091169060400135610548565b610186600480360360608110156101d457600080fd5b506001600160a01b038135811691602081013590911690604001356105a0565b6101866004803603602081101561020a57600080fd5b50356105bb565b61013e6004803603602081101561022757600080fd5b503561060f565b6102546004803603602081101561024457600080fd5b50356001600160a01b031661066c565b60408051918252519081900360200190f35b6101866004803603604081101561027c57600080fd5b506001600160a01b03813516906020013515156106d7565b610186600480360360808110156102aa57600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156102e557600080fd5b8201836020820111156102f757600080fd5b8035906020019184600183028401116401000000008311171561031957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506107a6945050505050565b61010d6004803603604081101561037057600080fd5b506001600160a01b0381358116916020013516610801565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60006103ca8261082f565b61040857604051600160e51b62461bcd02815260040180806020018281038252602c815260200180610ea0602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b600061042f8261060f565b9050806001600160a01b0316836001600160a01b0316141561048557604051600160e51b62461bcd028152600401808060200182810382526021815260200180610ef56021913960400191505060405180910390fd5b336001600160a01b03821614806104a157506104a18133610801565b6104df57604051600160e51b62461bcd028152600401808060200182810382526038815260200180610e156038913960400191505060405180910390fd5b600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b610552338261084c565b61059057604051600160e51b62461bcd028152600401808060200182810382526031815260200180610f166031913960400191505060405180910390fd5b61059b8383836108f3565b505050565b61059b838383604051806020016040528060008152506107a6565b6105c5338261084c565b61060357604051600160e51b62461bcd028152600401808060200182810382526030815260200180610f6c6030913960400191505060405180910390fd5b61060c81610a4a565b50565b6000818152600160205260408120546001600160a01b03168061066657604051600160e51b62461bcd028152600401808060200182810382526029815260200180610e776029913960400191505060405180910390fd5b92915050565b60006001600160a01b0382166106b657604051600160e51b62461bcd02815260040180806020018281038252602a815260200180610e4d602a913960400191505060405180910390fd5b6001600160a01b038216600090815260036020526040902061066690610a5c565b6001600160a01b0382163314156107385760408051600160e51b62461bcd02815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b6107b1848484610548565b6107bd84848484610a60565b6107fb57604051600160e51b62461bcd028152600401808060200182810382526032815260200180610d936032913960400191505060405180910390fd5b50505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b60006108578261082f565b61089557604051600160e51b62461bcd02815260040180806020018281038252602c815260200180610de9602c913960400191505060405180910390fd5b60006108a08361060f565b9050806001600160a01b0316846001600160a01b031614806108db5750836001600160a01b03166108d0846103bf565b6001600160a01b0316145b806108eb57506108eb8185610801565b949350505050565b826001600160a01b03166109068261060f565b6001600160a01b03161461094e57604051600160e51b62461bcd028152600401808060200182810382526029815260200180610ecc6029913960400191505060405180910390fd5b6001600160a01b03821661099657604051600160e51b62461bcd028152600401808060200182810382526024815260200180610dc56024913960400191505060405180910390fd5b61099f81610bdd565b6001600160a01b03831660009081526003602052604090206109c090610c25565b6001600160a01b03821660009081526003602052604090206109e190610c3c565b600081815260016020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61060c610a568261060f565b82610c45565b5490565b6000610a74846001600160a01b0316610d2c565b610a80575060016108eb565b6040517f150b7a0200000000000000000000000000000000000000000000000000000000815233600482018181526001600160a01b03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015610b13578181015183820152602001610afb565b50505050905090810190601f168015610b405780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015610b6257600080fd5b505af1158015610b76573d6000803e3d6000fd5b505050506040513d6020811015610b8c57600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a020000000000000000000000000000000000000000000000000000000014915050949350505050565b6000818152600260205260409020546001600160a01b03161561060c576000908152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff19169055565b8054610c3890600163ffffffff610d3216565b9055565b80546001019055565b816001600160a01b0316610c588261060f565b6001600160a01b031614610ca057604051600160e51b62461bcd028152600401808060200182810382526025815260200180610f476025913960400191505060405180910390fd5b610ca981610bdd565b6001600160a01b0382166000908152600360205260409020610cca90610c25565b600081815260016020526040808220805473ffffffffffffffffffffffffffffffffffffffff19169055518291906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b3b151590565b600082821115610d8c5760408051600160e51b62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732313a206275726e206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a165627a7a72305820bf881713b684878ba1a591aa4ade415ed7ab1978dfbcf964879b4962f811c0950029";

export class ERC721Burnable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721Burnable> {
    return super.deploy(overrides || {}) as Promise<ERC721Burnable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721Burnable {
    return super.attach(address) as ERC721Burnable;
  }
  connect(signer: Signer): ERC721Burnable__factory {
    return super.connect(signer) as ERC721Burnable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721BurnableInterface {
    return new utils.Interface(_abi) as ERC721BurnableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Burnable {
    return new Contract(address, _abi, signerOrProvider) as ERC721Burnable;
  }
}
