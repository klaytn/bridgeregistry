/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ChildBridgeTest,
  ChildBridgeTestInterface,
} from "../ChildBridgeTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRegisteredTokenList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600060405161001f906100d3565b604051809103906000f08015801561003b573d6000803e3d6000fd5b509050600060405161004c906100e0565b604051809103906000f080158015610068573d6000803e3d6000fd5b5060008054600180820183558280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56391820180546001600160a01b039788166001600160a01b031991821617909155835491820190935501805492909416911617909155506100ed565b6102478061035683390190565b6102478061059d83390190565b61025a806100fc6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630a3b0a4f146100465780634f64b2be146100bd578063ea21eade146100ed575b600080fd5b6100bb61005436600461018e565b600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b005b6100d06100cb3660046101be565b610102565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f561012c565b6040516100e491906101d7565b6000818154811061011257600080fd5b6000918252602090912001546001600160a01b0316905081565b6060600080548060200260200160405190810160405280929190818152602001828054801561018457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610166575b5050505050905090565b6000602082840312156101a057600080fd5b81356001600160a01b03811681146101b757600080fd5b9392505050565b6000602082840312156101d057600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156102185783516001600160a01b0316835292840192918401916001016101f3565b5090969550505050505056fea264697066735822122034876082ac6a4a97b1a3c735c8b33f437ea81b241df19d49d47e38d206bfe3f664736f6c63430008110033608060405234801561001057600080fd5b50610227806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a7146100515780632e0f2625146100bb578063a3f4df7e146100d5578063f76f8d781461011e575b600080fd5b6100a661005f36600461015a565b7fffffffff00000000000000000000000000000000000000000000000000000000167f7b6bbd84000000000000000000000000000000000000000000000000000000001490565b60405190151581526020015b60405180910390f35b6100c3600181565b60405160ff90911681526020016100b2565b6101116040518060400160405280601a81526020017f4368696c642053657276696365436861696e546f6b656e20303300000000000081525081565b6040516100b291906101a3565b6101116040518060400160405280600681526020017f435343543033000000000000000000000000000000000000000000000000000081525081565b60006020828403121561016c57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461019c57600080fd5b9392505050565b600060208083528351808285015260005b818110156101d0578581018301518582016040015282016101b4565b506000604082860101526040601f19601f830116850101925050509291505056fea2646970667358221220611db8b3d5a4263d41066c29cb68a5a377bf2aade10976778a6b80204585162f64736f6c63430008110033608060405234801561001057600080fd5b50610227806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a7146100515780632e0f2625146100bb578063a3f4df7e146100d5578063f76f8d781461011e575b600080fd5b6100a661005f36600461015a565b7fffffffff00000000000000000000000000000000000000000000000000000000167f7b6bbd84000000000000000000000000000000000000000000000000000000001490565b60405190151581526020015b60405180910390f35b6100c3600c81565b60405160ff90911681526020016100b2565b6101116040518060400160405280601a81526020017f4368696c642053657276696365436861696e546f6b656e20303400000000000081525081565b6040516100b291906101a3565b6101116040518060400160405280600681526020017f435343543034000000000000000000000000000000000000000000000000000081525081565b60006020828403121561016c57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461019c57600080fd5b9392505050565b600060208083528351808285015260005b818110156101d0578581018301518582016040015282016101b4565b506000604082860101526040601f19601f830116850101925050509291505056fea26469706673582212206f16f1b0e5266f438593437e64371c5868c7f7504d0f236743f8621da5d3943564736f6c63430008110033";

export class ChildBridgeTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChildBridgeTest> {
    return super.deploy(overrides || {}) as Promise<ChildBridgeTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ChildBridgeTest {
    return super.attach(address) as ChildBridgeTest;
  }
  connect(signer: Signer): ChildBridgeTest__factory {
    return super.connect(signer) as ChildBridgeTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChildBridgeTestInterface {
    return new utils.Interface(_abi) as ChildBridgeTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChildBridgeTest {
    return new Contract(address, _abi, signerOrProvider) as ChildBridgeTest;
  }
}
