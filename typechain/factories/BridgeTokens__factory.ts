/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BridgeTokens, BridgeTokensInterface } from "../BridgeTokens";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "_token",
        type: "address",
      },
    ],
    name: "lockToken",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    name: "registeredTokenList",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_token",
        type: "address",
      },
      {
        name: "_cToken",
        type: "address",
      },
    ],
    name: "registerToken",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "address",
      },
    ],
    name: "indexOfTokens",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "address",
      },
    ],
    name: "lockedTokens",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "address",
      },
    ],
    name: "registeredTokens",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_token",
        type: "address",
      },
    ],
    name: "unlockToken",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_token",
        type: "address",
      },
    ],
    name: "deregisterToken",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "getRegisteredChildTokenList",
    outputs: [
      {
        name: "",
        type: "address[]",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getRegisteredTokenList",
    outputs: [
      {
        name: "",
        type: "address[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "token",
        type: "address",
      },
    ],
    name: "TokenRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "token",
        type: "address",
      },
    ],
    name: "TokenDeregistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "token",
        type: "address",
      },
    ],
    name: "TokenLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "token",
        type: "address",
      },
    ],
    name: "TokenUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
];

const _bytecode =
  "0x60806040819052600080546001600160a01b03191633178082556001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3610db2806100576000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063bab2af1d11610066578063bab2af1d14610254578063dcb6afeb1461027a578063ea21eade146102d2578063f2fde38b146102da576100ea565b80638da5cb5b1461021e5780638f32d59b146102265780639ef2017b1461022e576100ea565b806348a18a6a116100c857806348a18a6a1461017e5780635eb7413a146101b6578063715018a6146101f05780638c0bd916146101f8576100ea565b806310693fcd146100ef5780633e4fe949146101175780634739f7e514610150575b600080fd5b6101156004803603602081101561010557600080fd5b50356001600160a01b0316610300565b005b6101346004803603602081101561012d57600080fd5b503561048e565b604080516001600160a01b039092168252519081900360200190f35b6101156004803603604081101561016657600080fd5b506001600160a01b03813581169160200135166104b5565b6101a46004803603602081101561019457600080fd5b50356001600160a01b031661062f565b60408051918252519081900360200190f35b6101dc600480360360208110156101cc57600080fd5b50356001600160a01b0316610641565b604080519115158252519081900360200190f35b610115610656565b6101346004803603602081101561020e57600080fd5b50356001600160a01b0316610709565b610134610724565b6101dc610734565b6101156004803603602081101561024457600080fd5b50356001600160a01b0316610745565b6101156004803603602081101561026a57600080fd5b50356001600160a01b03166108d4565b610282610aeb565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156102be5781810151838201526020016102a6565b505050509050019250505060405180910390f35b610282610b9f565b610115600480360360208110156102f057600080fd5b50356001600160a01b0316610c01565b610308610734565b61035c5760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038082166000908152600160205260409020548291166103cd5760408051600160e51b62461bcd02815260206004820152601160248201527f6e6f7420616c6c6f77656420746f6b656e000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038216600090815260046020526040902054829060ff16156104405760408051600160e51b62461bcd02815260206004820152600c60248201527f6c6f636b656420746f6b656e0000000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038316600081815260046020526040808220805460ff19166001179055517fca1b0a14e18ada4c44846768dd186e35630cdc5cfeaca83c404ae4acaafbecd79190a2505050565b6003818154811061049b57fe5b6000918252602090912001546001600160a01b0316905081565b6104bd610734565b6105115760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03808316600090815260016020526040902054839116156105835760408051600160e51b62461bcd02815260206004820152600d60248201527f616c6c6f77656420746f6b656e00000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038084166000818152600160208181526040808420805496891673ffffffffffffffffffffffffffffffffffffffff1997881617905560038054600290935281852083905592820183559183527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180549094168317909355915190917f158412daecdc1456d01568828bcdb18464cc7f1ce0215ddbc3f3cfede9d1e63d91a2505050565b60026020526000908152604090205481565b60046020526000908152604090205460ff1681565b61065e610734565b6106b25760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6001602052600090815260409020546001600160a01b031681565b6000546001600160a01b03165b90565b6000546001600160a01b0316331490565b61074d610734565b6107a15760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038082166000908152600160205260409020548291166108125760408051600160e51b62461bcd02815260206004820152601160248201527f6e6f7420616c6c6f77656420746f6b656e000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038216600090815260046020526040902054829060ff1615156001146108895760408051600160e51b62461bcd02815260206004820152600e60248201527f756e6c6f636b656420746f6b656e000000000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b038316600081815260046020526040808220805460ff19169055517f81ec08d3372506e176c49e626d8beb7e091712ef92908a130f4ccc6524fe2eec9190a2505050565b6108dc610734565b6109305760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038082166000908152600160205260409020548291166109a15760408051600160e51b62461bcd02815260206004820152601160248201527f6e6f7420616c6c6f77656420746f6b656e000000000000000000000000000000604482015290519081900360640190fd5b6001600160a01b0382166000908152600160209081526040808320805473ffffffffffffffffffffffffffffffffffffffff1916905560048252808320805460ff1916905560029091528120805491905560035460001901811015610a9e57600380546000198101908110610a1257fe5b600091825260209091200154600380546001600160a01b039092169183908110610a3857fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806002600060038481548110610a7857fe5b60009182526020808320909101546001600160a01b031683528201929092526040019020555b6003805490610ab1906000198301610d19565b506040516001600160a01b038416907f1d735ca20b63676dde668b718be78606b061d6bd7534ff815a90a121a6c084b690600090a2505050565b606080600380549050604051908082528060200260200182016040528015610b1d578160200160208202803883390190505b5090506000805b600354811015610b975760038181548110610b3b57fe5b60009182526020808320909101546001600160a01b039081168084526001909252604090922054855191945090911690849083908110610b7757fe5b6001600160a01b0390921660209283029190910190910152600101610b24565b509091505090565b60606003805480602002602001604051908101604052809291908181526020018280548015610bf757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610bd9575b5050505050905090565b610c09610734565b610c5d5760408051600160e51b62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610c6681610c69565b50565b6001600160a01b038116610cb157604051600160e51b62461bcd028152600401808060200182810382526026815260200180610d616026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b815481835581811115610d3d57600083815260209020610d3d918101908301610d42565b505050565b61073191905b80821115610d5c5760008155600101610d48565b509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a165627a7a723058201aec0f2c2e41902a18b43289fb76b53ce3091aea4633a9f092932a0ad4611d2a0029";

export class BridgeTokens__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BridgeTokens> {
    return super.deploy(overrides || {}) as Promise<BridgeTokens>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BridgeTokens {
    return super.attach(address) as BridgeTokens;
  }
  connect(signer: Signer): BridgeTokens__factory {
    return super.connect(signer) as BridgeTokens__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeTokensInterface {
    return new utils.Interface(_abi) as BridgeTokensInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeTokens {
    return new Contract(address, _abi, signerOrProvider) as BridgeTokens;
  }
}
