/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ServiceNetwork,
  ServiceNetworkInterface,
} from "../ServiceNetwork";

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_parentBridgeName",
        type: "string",
      },
      {
        internalType: "address",
        name: "_parentBridgeAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_childBridgeName",
        type: "string",
      },
      {
        internalType: "address",
        name: "_childBridgeAddress",
        type: "address",
      },
    ],
    name: "addBridgePair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "chainId",
        type: "string",
      },
      {
        internalType: "string",
        name: "shortName",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "rpcUrl",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "networkId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tokenDecimals",
        type: "uint256",
      },
    ],
    name: "addNetwork",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "deleteBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "deleteNetwork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveNetworks",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "key",
            type: "string",
          },
          {
            internalType: "string",
            name: "chainId",
            type: "string",
          },
          {
            internalType: "string",
            name: "shortName",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "rpcUrl",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "networkId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
            ],
            internalType: "struct NativeCurrency",
            name: "nativeCurrency",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
            ],
            internalType: "struct Token",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "explorer",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "website",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "activated",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "show",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "displayOrder",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "networkStatus",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "lastCheckedNetworkStatus",
                type: "uint256",
              },
            ],
            internalType: "struct NetworkDetail",
            name: "detail",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "depth",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "parentId",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "childIds",
                type: "string[]",
              },
            ],
            internalType: "struct NetworkPair",
            name: "networkPair",
            type: "tuple",
          },
        ],
        internalType: "struct Network[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllBridgePairs",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "key",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "parentBridgeName",
            type: "string",
          },
          {
            internalType: "address",
            name: "parentBridgeAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "childBridgeName",
            type: "string",
          },
          {
            internalType: "address",
            name: "childBridgeAddress",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "symbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "decimals",
                    type: "uint256",
                  },
                ],
                internalType: "struct Token",
                name: "parentToken",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "symbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "decimals",
                    type: "uint256",
                  },
                ],
                internalType: "struct Token",
                name: "childToken",
                type: "tuple",
              },
            ],
            internalType: "struct TokenPair[]",
            name: "tokenPairs",
            type: "tuple[]",
          },
        ],
        internalType: "struct BridgePair[]",
        name: "brigePairs",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllNetworks",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "key",
            type: "string",
          },
          {
            internalType: "string",
            name: "chainId",
            type: "string",
          },
          {
            internalType: "string",
            name: "shortName",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "rpcUrl",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "networkId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
            ],
            internalType: "struct NativeCurrency",
            name: "nativeCurrency",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
            ],
            internalType: "struct Token",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "explorer",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "website",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "activated",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "show",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "displayOrder",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "networkStatus",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "lastCheckedNetworkStatus",
                type: "uint256",
              },
            ],
            internalType: "struct NetworkDetail",
            name: "detail",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "depth",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "parentId",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "childIds",
                type: "string[]",
              },
            ],
            internalType: "struct NetworkPair",
            name: "networkPair",
            type: "tuple",
          },
        ],
        internalType: "struct Network[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllTokenPairs",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
            ],
            internalType: "struct Token",
            name: "parentToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
            ],
            internalType: "struct Token",
            name: "childToken",
            type: "tuple",
          },
        ],
        internalType: "struct TokenPair[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getBridge",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "key",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "parentBridgeName",
            type: "string",
          },
          {
            internalType: "address",
            name: "parentBridgeAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "childBridgeName",
            type: "string",
          },
          {
            internalType: "address",
            name: "childBridgeAddress",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "symbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "decimals",
                    type: "uint256",
                  },
                ],
                internalType: "struct Token",
                name: "parentToken",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "string",
                    name: "symbol",
                    type: "string",
                  },
                  {
                    internalType: "uint256",
                    name: "decimals",
                    type: "uint256",
                  },
                ],
                internalType: "struct Token",
                name: "childToken",
                type: "tuple",
              },
            ],
            internalType: "struct TokenPair[]",
            name: "tokenPairs",
            type: "tuple[]",
          },
        ],
        internalType: "struct BridgePair",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getNetwork",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "key",
            type: "string",
          },
          {
            internalType: "string",
            name: "chainId",
            type: "string",
          },
          {
            internalType: "string",
            name: "shortName",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "rpcUrl",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "networkId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
            ],
            internalType: "struct NativeCurrency",
            name: "nativeCurrency",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "decimals",
                type: "uint256",
              },
            ],
            internalType: "struct Token",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "explorer",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "website",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "activated",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "show",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "displayOrder",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "networkStatus",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "lastCheckedNetworkStatus",
                type: "uint256",
              },
            ],
            internalType: "struct NetworkDetail",
            name: "detail",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "depth",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "parentId",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "childIds",
                type: "string[]",
              },
            ],
            internalType: "struct NetworkPair",
            name: "networkPair",
            type: "tuple",
          },
        ],
        internalType: "struct Network",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "chainId",
        type: "string",
      },
      {
        internalType: "string",
        name: "shortName",
        type: "string",
      },
    ],
    name: "getNetworkKey",
    outputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalTokensNum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "string",
        name: "chainId",
        type: "string",
      },
      {
        internalType: "string",
        name: "shortName",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "rpcUrl",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "networkId",
        type: "uint256",
      },
    ],
    name: "updateNetwork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "updateParentTokenList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50614659806100206000396000f3fe6080604052600436106100d55760003560e01c8063b7c188af11610079578063d4bb4fe911610056578063d4bb4fe91461024a578063f3c475fb1461025f578063fb5af4761461028c578063fbebbf05146102af57005b8063b7c188af146101dd578063cf319e9b146101fd578063d376debd1461022a57005b80636edf1317116100b25780636edf131714610156578063830c9850146101795780639e1ad67f1461019b578063b1beb359146101bd57005b80630a5a0ffa146100de5780630dff3285146101095780633dafe12c1461013657005b366100dc57005b005b3480156100ea57600080fd5b506100f36102cf565b6040516101009190612c47565b60405180910390f35b34801561011557600080fd5b50610129610124366004612e47565b6106f8565b60405161010091906130e0565b34801561014257600080fd5b506100dc610151366004612e47565b610784565b34801561016257600080fd5b5061016b61080a565b604051908152602001610100565b34801561018557600080fd5b5061018e610878565b60405161010091906130f3565b3480156101a757600080fd5b506101b0610910565b604051610100919061326d565b3480156101c957600080fd5b506100dc6101d83660046132d7565b6109a4565b3480156101e957600080fd5b506100dc6101f8366004612e47565b610d9a565b34801561020957600080fd5b5061021d610218366004613389565b611031565b60405161010091906133ed565b34801561023657600080fd5b506100dc610245366004613400565b611057565b34801561025657600080fd5b5061018e61120e565b34801561026b57600080fd5b5061027f61027a366004612e47565b61157f565b60405161010091906134da565b61029f61029a3660046134ed565b611c39565b6040519015158152602001610100565b3480156102bb57600080fd5b506100dc6102ca366004612e47565b611e0d565b60606000806102dc61080a565b905060006102eb60028361360d565b67ffffffffffffffff81111561030357610303612ccc565b60405190808252806020026020018201604052801561033c57816020015b6103296128e9565b8152602001906001900390816103215790505b5090506000610349610910565b805190915060005b818110156106ed57600083828151811061036d5761036d61362f565b602002602001015160c0015151905060005b818110156106d8576040518060a001604052808685815181106103a4576103a461362f565b602002602001015160c0015183815181106103c1576103c161362f565b602002602001015160000151600001516001600160a01b031681526020018685815181106103f1576103f161362f565b602002602001015160c00151838151811061040e5761040e61362f565b60200260200101516000015160200151600681111561042f5761042f612b5f565b81526020018685815181106104465761044661362f565b602002602001015160c0015183815181106104635761046361362f565b60200260200101516000015160400151815260200186858151811061048a5761048a61362f565b602002602001015160c0015183815181106104a7576104a761362f565b6020026020010151600001516060015181526020018685815181106104ce576104ce61362f565b602002602001015160c0015183815181106104eb576104eb61362f565b602002602001015160000151608001518152508689815181106105105761051061362f565b6020026020010151600001819052506040518060a0016040528086858151811061053c5761053c61362f565b602002602001015160c0015183815181106105595761055961362f565b602002602001015160200151600001516001600160a01b031681526020018685815181106105895761058961362f565b602002602001015160c0015183815181106105a6576105a661362f565b6020026020010151602001516020015160068111156105c7576105c7612b5f565b81526020018685815181106105de576105de61362f565b602002602001015160c0015183815181106105fb576105fb61362f565b6020026020010151602001516040015181526020018685815181106106225761062261362f565b602002602001015160c00151838151811061063f5761063f61362f565b6020026020010151602001516060015181526020018685815181106106665761066661362f565b602002602001015160c0015183815181106106835761068361362f565b602002602001015160200151608001518152508689815181106106a8576106a861362f565b60200260200101516020018190525087806106c290613645565b98505080806106d090613645565b91505061037f565b505080806106e590613645565b915050610351565b509195945050505050565b610700612957565b604051630140593160e71b815273__$06d508590a3822408fd121ace3cfe95d23$__9063a02c988090610739906004908690820161365e565b600060405180830381865af4158015610756573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261077e9190810190613b8a565b92915050565b6040517fdb16860e00000000000000000000000000000000000000000000000000000000815273__$162b54970ae4871b82ec7acaef59686faf$__9063db16860e906107d790600090859060040161365e565b60006040518083038186803b1580156107ef57600080fd5b505af4158015610803573d6000803e3d6000fd5b5050505050565b60008080610816610910565b805190915060005b8181101561086f578281815181106108385761083861362f565b602002602001015160c001515160026108519190613bbf565b61085b9085613bd6565b93508061086781613645565b91505061081e565b50919392505050565b6040517ff42baeb400000000000000000000000000000000000000000000000000000000815260048082015260609073__$06d508590a3822408fd121ace3cfe95d23$__9063f42baeb490602401600060405180830381865af41580156108e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261090b9190810190613be9565b905090565b6040517f6ac15b260000000000000000000000000000000000000000000000000000000081526000600482015260609073__$162b54970ae4871b82ec7acaef59686faf$__90636ac15b2690602401600060405180830381865af415801561097c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261090b9190810190613d6c565b60608585846040516020016109bb93929190613f07565b60408051601f19818403018152908290527fbaef6e14000000000000000000000000000000000000000000000000000000008252915073__$162b54970ae4871b82ec7acaef59686faf$__9063baef6e1490610a1e90600090859060040161365e565b602060405180830381865af4158015610a3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5f9190613f9e565b1581604051602001610a719190613fb9565b60405160208183030381529060405290610aa75760405162461bcd60e51b8152600401610a9e91906133ed565b60405180910390fd5b50604051639f14344960e01b815260009073__$162b54970ae4871b82ec7acaef59686faf$__90639f14344990610ae4908490869060040161365e565b602060405180830381865af4158015610b01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b259190613ffa565b905080610b32838261409c565b5060018101610b41888261409c565b5060028101610b50878261409c565b506003810180546001600160a01b0319166001600160a01b03871617905560048101610b7c858261409c565b506005810180546001600160a01b0319166001600160a01b0385161790556000610ba586611e5f565b905060005b8151811015610d235782600601828281518110610bc957610bc961362f565b602090810291909101810151825460018101845560009384529282902081518051600890950290910180546001600160a01b031981166001600160a01b039096169586178255938201519294909391928492909183916001600160a81b03191617600160a01b836006811115610c4157610c41612b5f565b021790555060408201516001820190610c5a908261409c565b5060608201516002820190610c6f908261409c565b506080919091015160039091015560208281015180516004840180546001600160a01b031981166001600160a01b03909316928317825593830151929390929183916001600160a81b03191617600160a01b836006811115610cd357610cd3612b5f565b021790555060408201516001820190610cec908261409c565b5060608201516002820190610d01908261409c565b5060808201518160030155505050508080610d1b90613645565b915050610baa565b506040516327b7a63560e21b815273__$162b54970ae4871b82ec7acaef59686faf$__90639ede98d490610d60906000908790879060040161415c565b60006040518083038186803b158015610d7857600080fd5b505af4158015610d8c573d6000803e3d6000fd5b505050505050505050505050565b604051639f14344960e01b815260009073__$162b54970ae4871b82ec7acaef59686faf$__90639f14344990610dd6908490869060040161365e565b602060405180830381865af4158015610df3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e179190613ffa565b9050610e27600682016000612a6b565b6003810154600090610e41906001600160a01b0316611e5f565b905060005b8151811015610fbf5782600601828281518110610e6557610e6561362f565b602090810291909101810151825460018101845560009384529282902081518051600890950290910180546001600160a01b031981166001600160a01b039096169586178255938201519294909391928492909183916001600160a81b03191617600160a01b836006811115610edd57610edd612b5f565b021790555060408201516001820190610ef6908261409c565b5060608201516002820190610f0b908261409c565b506080919091015160039091015560208281015180516004840180546001600160a01b031981166001600160a01b03909316928317825593830151929390929183916001600160a81b03191617600160a01b836006811115610f6f57610f6f612b5f565b021790555060408201516001820190610f88908261409c565b5060608201516002820190610f9d908261409c565b5060808201518160030155505050508080610fb790613645565b915050610e46565b506040516327b7a63560e21b815273__$162b54970ae4871b82ec7acaef59686faf$__90639ede98d490610ffc906000908790879060040161415c565b60006040518083038186803b15801561101457600080fd5b505af4158015611028573d6000803e3d6000fd5b50505050505050565b60606110506040518060400160405280858152602001848152506128b6565b9392505050565b60006110638686611031565b6040517f60353db900000000000000000000000000000000000000000000000000000000815290915073__$76499cc972b9a0bb936d598f1efe85bd49$__906360353db9906110b8908a908590600401614185565b602060405180830381865af41580156110d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f99190613f9e565b878260405160200161110c9291906141aa565b604051602081830303815290604052906111395760405162461bcd60e51b8152600401610a9e91906133ed565b50604051630140593160e71b815260009073__$06d508590a3822408fd121ace3cfe95d23$__9063a02c988090611176906004908c90820161365e565b600060405180830381865af4158015611193573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111bb9190810190613b8a565b606081018690526080810185905260a0810184905260405163d298fe8960e01b815290915073__$06d508590a3822408fd121ace3cfe95d23$__9063d298fe8990610d60906004908c90869083016142bc565b604051634aa3c59360e01b815260048082015260609060009073__$06d508590a3822408fd121ace3cfe95d23$__90634aa3c59390602401602060405180830381865af4158015611263573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112879190613ffa565b67ffffffffffffffff81111561129f5761129f612ccc565b6040519080825280602002602001820160405280156112d857816020015b6112c5612957565b8152602001906001900390816112bd5790505b5090506000805b604051634aa3c59360e01b815260048082015273__$06d508590a3822408fd121ace3cfe95d23$__90634aa3c59390602401602060405180830381865af415801561132e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113529190613ffa565b8110156114c5576040517ff35610680000000000000000000000000000000000000000000000000000000081526004808201526024810182905260009073__$06d508590a3822408fd121ace3cfe95d23$__9063f356106890604401600060405180830381865af41580156113cb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113f39190810190614457565b604051630140593160e71b815290915060009073__$06d508590a3822408fd121ace3cfe95d23$__9063a02c988090611432906004908690820161365e565b600060405180830381865af415801561144f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114779190810190613b8a565b61016081015151909150156114b05780858561149281613645565b9650815181106114a4576114a461362f565b60200260200101819052505b505080806114bd90613645565b9150506112df565b50805b604051634aa3c59360e01b815260048082015273__$06d508590a3822408fd121ace3cfe95d23$__90634aa3c59390602401602060405180830381865af4158015611517573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153b9190613ffa565b811015611577578281815181106115545761155461362f565b60200260200101611563612957565b90528061156f81613645565b9150506114c8565b509092915050565b6115d16040518060e0016040528060608152602001606081526020016060815260200160006001600160a01b031681526020016060815260200160006001600160a01b03168152602001606081525090565b604051639f14344960e01b815260009073__$162b54970ae4871b82ec7acaef59686faf$__90639f1434499061160d908490879060040161365e565b602060405180830381865af415801561162a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164e9190613ffa565b6040518060e001604052908160008201805461166990614013565b80601f016020809104026020016040519081016040528092919081815260200182805461169590614013565b80156116e25780601f106116b7576101008083540402835291602001916116e2565b820191906000526020600020905b8154815290600101906020018083116116c557829003601f168201915b505050505081526020016001820180546116fb90614013565b80601f016020809104026020016040519081016040528092919081815260200182805461172790614013565b80156117745780601f1061174957610100808354040283529160200191611774565b820191906000526020600020905b81548152906001019060200180831161175757829003601f168201915b5050505050815260200160028201805461178d90614013565b80601f01602080910402602001604051908101604052809291908181526020018280546117b990614013565b80156118065780601f106117db57610100808354040283529160200191611806565b820191906000526020600020905b8154815290600101906020018083116117e957829003601f168201915b505050918352505060038201546001600160a01b0316602082015260048201805460409092019161183690614013565b80601f016020809104026020016040519081016040528092919081815260200182805461186290614013565b80156118af5780601f10611884576101008083540402835291602001916118af565b820191906000526020600020905b81548152906001019060200180831161189257829003601f168201915b505050918352505060058201546001600160a01b0316602080830191909152600683018054604080518285028101850182528281529401939260009084015b82821015611c2a576000848152602090206040805160e0810182526008850290920180546001600160a01b0381169284019283529091839183906060840190600160a01b900460ff16600681111561194857611948612b5f565b600681111561195957611959612b5f565b815260200160018201805461196d90614013565b80601f016020809104026020016040519081016040528092919081815260200182805461199990614013565b80156119e65780601f106119bb576101008083540402835291602001916119e6565b820191906000526020600020905b8154815290600101906020018083116119c957829003601f168201915b505050505081526020016002820180546119ff90614013565b80601f0160208091040260200160405190810160405280929190818152602001828054611a2b90614013565b8015611a785780601f10611a4d57610100808354040283529160200191611a78565b820191906000526020600020905b815481529060010190602001808311611a5b57829003601f168201915b5050509183525050600391909101546020918201529082526040805160a081019091526004840180546001600160a01b0381168352938301939192909190830190600160a01b900460ff166006811115611ad457611ad4612b5f565b6006811115611ae557611ae5612b5f565b8152602001600182018054611af990614013565b80601f0160208091040260200160405190810160405280929190818152602001828054611b2590614013565b8015611b725780601f10611b4757610100808354040283529160200191611b72565b820191906000526020600020905b815481529060010190602001808311611b5557829003601f168201915b50505050508152602001600282018054611b8b90614013565b80601f0160208091040260200160405190810160405280929190818152602001828054611bb790614013565b8015611c045780601f10611bd957610100808354040283529160200191611c04565b820191906000526020600020905b815481529060010190602001808311611be757829003601f168201915b5050505050815260200160038201548152505081525050815260200190600101906118ee565b50505091525090949350505050565b600080611c468a8a611031565b6040517ff208f22900000000000000000000000000000000000000000000000000000000815290915073__$06d508590a3822408fd121ace3cfe95d23$__9063f208f22990611c9b906004908590820161365e565b602060405180830381865af4158015611cb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cdc9190613f9e565b1581604051602001611cee9190613fb9565b60405160208183030381529060405290611d1b5760405162461bcd60e51b8152600401610a9e91906133ed565b50611d24612957565b818152602081018b9052604081018a9052606081018990526080810188905260a08101879052611d698187878760c09093018051929092528151602001525160400152565b611d918161016001805160009081905281516020018190528151604001819052905160600152565b60405163d298fe8960e01b815273__$06d508590a3822408fd121ace3cfe95d23$__9063d298fe8990611dcc906004908690869083016142bc565b60006040518083038186803b158015611de457600080fd5b505af4158015611df8573d6000803e3d6000fd5b5060019e9d5050505050505050505050505050565b6040517f3fa70b0700000000000000000000000000000000000000000000000000000000815273__$06d508590a3822408fd121ace3cfe95d23$__90633fa70b07906107d7906004908590820161365e565b606060008290506000816001600160a01b031663ea21eade6040518163ffffffff1660e01b8152600401600060405180830381865afa158015611ea6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ece919081019061448c565b90506000826001600160a01b031663dcb6afeb6040518163ffffffff1660e01b8152600401600060405180830381865afa158015611f10573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611f38919081019061448c565b825190915060008167ffffffffffffffff811115611f5857611f58612ccc565b604051908082528060200260200182016040528015611f9157816020015b611f7e6128e9565b815260200190600190039081611f765790505b50905060005b828110156128ab576000858281518110611fb357611fb361362f565b602002602001015190506000858381518110611fd157611fd161362f565b60200260200101519050611fe5823b151590565b15612896576040516301ffc9a760e01b81527f7b6bbd8400000000000000000000000000000000000000000000000000000000600482015282906001600160a01b038216906301ffc9a790602401602060405180830381865afa158015612050573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120749190613f9e565b156124fc578285858151811061208c5761208c61362f565b6020908102919091010151516001600160a01b03909116905284516000908690869081106120bc576120bc61362f565b6020026020010151600001516020019060068111156120dd576120dd612b5f565b908160068111156120f0576120f0612b5f565b81525050806001600160a01b031663a3f4df7e6040518163ffffffff1660e01b8152600401600060405180830381865afa158015612132573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261215a9190810190614457565b85858151811061216c5761216c61362f565b60200260200101516000015160400181905250806001600160a01b031663f76f8d786040518163ffffffff1660e01b8152600401600060405180830381865afa1580156121bd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526121e59190810190614457565b8585815181106121f7576121f761362f565b60200260200101516000015160600181905250806001600160a01b0316632e0f26256040518163ffffffff1660e01b8152600401602060405180830381865afa158015612248573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061226c9190614526565b60ff168585815181106122815761228161362f565b6020026020010151600001516080018181525050818585815181106122a8576122a861362f565b602002602001015160200151600001906001600160a01b031690816001600160a01b03168152505060008585815181106122e4576122e461362f565b60200260200101516020015160200190600681111561230557612305612b5f565b9081600681111561231857612318612b5f565b81525050806001600160a01b031663a3f4df7e6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561235a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526123829190810190614457565b6040516020016123929190614549565b6040516020818303038152906040528585815181106123b3576123b361362f565b60200260200101516020015160400181905250806001600160a01b031663f76f8d786040518163ffffffff1660e01b8152600401600060405180830381865afa158015612404573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261242c9190810190614457565b60405160200161243c919061458a565b60405160208183030381529060405285858151811061245d5761245d61362f565b60200260200101516020015160600181905250806001600160a01b0316632e0f26256040518163ffffffff1660e01b8152600401602060405180830381865afa1580156124ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124d29190614526565b60ff168585815181106124e7576124e761362f565b60200260200101516020015160800181815250505b6040516301ffc9a760e01b81527fc78080bc00000000000000000000000000000000000000000000000000000000600482015283906001600160a01b038216906301ffc9a790602401602060405180830381865afa158015612562573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125869190613f9e565b15612893578386868151811061259e5761259e61362f565b6020908102919091010151516001600160a01b03909116905285516001908790879081106125ce576125ce61362f565b6020026020010151600001516020019060068111156125ef576125ef612b5f565b9081600681111561260257612602612b5f565b81525050806001600160a01b031663a3f4df7e6040518163ffffffff1660e01b8152600401600060405180830381865afa158015612644573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261266c9190810190614457565b86868151811061267e5761267e61362f565b60200260200101516000015160400181905250604051806040016040528060028152602001616e6160f01b8152508686815181106126be576126be61362f565b6020026020010151600001516060018190525060008686815181106126e5576126e561362f565b60200260200101516000015160800181815250508286868151811061270c5761270c61362f565b602002602001015160200151600001906001600160a01b031690816001600160a01b03168152505060018686815181106127485761274861362f565b60200260200101516020015160200190600681111561276957612769612b5f565b9081600681111561277c5761277c612b5f565b81525050806001600160a01b031663a3f4df7e6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156127be573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526127e69190810190614457565b6040516020016127f69190614549565b6040516020818303038152906040528686815181106128175761281761362f565b60200260200101516020015160400181905250604051806040016040528060028152602001616e6160f01b8152508686815181106128575761285761362f565b60200260200101516020015160600181905250600086868151811061287e5761287e61362f565b60200260200101516020015160800181815250505b50505b505080806128a390613645565b915050611f97565b509695505050505050565b6060816000015182602001516040516020016128d39291906145cb565b6040516020818303038152906040529050919050565b6040805160e081018252600091810182815260608083018490526080830181905260a083015260c082019290925290819081526020016129526040805160a081019091526000808252602082019081526020016060815260200160608152602001600081525090565b905290565b604051806101a001604052806060815260200160608152602001606081526020016060815260200160608152602001600081526020016129b160405180606001604052806060815260200160608152602001600081525090565b81526020016129e96040805160a081019091526000808252602082019081526020016060815260200160608152602001600081525090565b8152602001606081526020016060815260200160608152602001612a3b6040518060a0016040528060001515815260200160001515815260200160008152602001600015158152602001600081525090565b81526020016129526040518060800160405280606081526020016000815260200160608152602001606081525090565b5080546000825560080290600052602060002090810190612a8c9190612a8f565b50565b80821115612b115780546001600160a81b031916815560008181612ab66001830182612b15565b612ac4600283016000612b15565b5060006003919091018190556004830180546001600160a81b031916815590612af06005850182612b15565b612afe600283016000612b15565b6003820160009055505050600801612a8f565b5090565b508054612b2190614013565b6000825580601f10612b31575050565b601f016020900490600052602060002090810190612a8c91905b80821115612b115760008155600101612b4b565b634e487b7160e01b600052602160045260246000fd5b60005b83811015612b90578181015183820152602001612b78565b50506000910152565b60008151808452612bb1816020860160208601612b75565b601f01601f19169290920160200192915050565b6001600160a01b0381511682526000602082015160078110612bf757634e487b7160e01b600052602160045260246000fd5b80602085015250604082015160a06040850152612c1760a0850182612b99565b905060608301518482036060860152612c308282612b99565b915050608083015160808501528091505092915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015612cbe57888303603f1901855281518051878552612c9288860182612bc5565b91890151858303868b0152919050612caa8183612bc5565b968901969450505090860190600101612c6e565b509098975050505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715612d0557612d05612ccc565b60405290565b6040516080810167ffffffffffffffff81118282101715612d0557612d05612ccc565b6040516101a0810167ffffffffffffffff81118282101715612d0557612d05612ccc565b6040805190810167ffffffffffffffff81118282101715612d0557612d05612ccc565b60405160e0810167ffffffffffffffff81118282101715612d0557612d05612ccc565b604051601f8201601f1916810167ffffffffffffffff81118282101715612dc157612dc1612ccc565b604052919050565b600067ffffffffffffffff821115612de357612de3612ccc565b50601f01601f191660200190565b600082601f830112612e0257600080fd5b8135612e15612e1082612dc9565b612d98565b818152846020838601011115612e2a57600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215612e5957600080fd5b813567ffffffffffffffff811115612e7057600080fd5b612e7c84828501612df1565b949350505050565b6000815160608452612e996060850182612b99565b905060208301518482036020860152612eb28282612b99565b915050604083015160408501528091505092915050565b6000815160808452612ede6080850182612b99565b90506020808401518186015260408401518583036040870152612f018382612b99565b925050606084015185830360608701528281518085528385019150838160051b860101848401935060005b82811015612f5a57601f19878303018452612f48828651612b99565b94860194938601939150600101612f2c565b5098975050505050505050565b60006102208251818552612f7d82860182612b99565b91505060208301518482036020860152612f978282612b99565b91505060408301518482036040860152612fb18282612b99565b91505060608301518482036060860152612fcb8282612b99565b91505060808301518482036080860152612fe58282612b99565b91505060a083015160a085015260c083015184820360c08601526130098282612e84565b91505060e083015184820360e08601526130238282612bc5565b915050610100808401518583038287015261303e8382612b99565b92505050610120808401518583038287015261305a8382612b99565b9250505061014080840151858303828701526130768382612b99565b610160868101518051151589830152602081015115156101808a015260408101516101a08a0152606081015115156101c08a015260808101516101e08a01529194509250905050506101808301518482036102008601526130d78282612ec9565b95945050505050565b6020815260006110506020830184612f67565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561314857603f19888603018452613136858351612f67565b9450928501929085019060010161311a565b5092979650505050505050565b6000815180845260208085019450848260051b860182860160005b858110156131c057838303895281516040815181865261319282870182612bc5565b915050868201519150848103878601526131ac8183612bc5565b9a87019a9450505090840190600101613170565b5090979650505050505050565b6000815160e084526131e260e0850182612b99565b9050602083015184820360208601526131fb8282612b99565b915050604083015184820360408601526132158282612b99565b91505060608301516001600160a01b0380821660608701526080850151915085830360808701526132468383612b99565b92508060a08601511660a0870152505060c083015184820360c08601526130d78282613155565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561314857603f198886030184526132b08583516131cd565b94509285019290850190600101613294565b6001600160a01b0381168114612a8c57600080fd5b600080600080600060a086880312156132ef57600080fd5b853567ffffffffffffffff8082111561330757600080fd5b61331389838a01612df1565b9650602088013591508082111561332957600080fd5b61333589838a01612df1565b955060408801359150613347826132c2565b9093506060870135908082111561335d57600080fd5b5061336a88828901612df1565b925050608086013561337b816132c2565b809150509295509295909350565b6000806040838503121561339c57600080fd5b823567ffffffffffffffff808211156133b457600080fd5b6133c086838701612df1565b935060208501359150808211156133d657600080fd5b506133e385828601612df1565b9150509250929050565b6020815260006110506020830184612b99565b60008060008060008060c0878903121561341957600080fd5b863567ffffffffffffffff8082111561343157600080fd5b61343d8a838b01612df1565b9750602089013591508082111561345357600080fd5b61345f8a838b01612df1565b9650604089013591508082111561347557600080fd5b6134818a838b01612df1565b9550606089013591508082111561349757600080fd5b6134a38a838b01612df1565b945060808901359150808211156134b957600080fd5b506134c689828a01612df1565b92505060a087013590509295509295509295565b60208152600061105060208301846131cd565b600080600080600080600080610100898b03121561350a57600080fd5b883567ffffffffffffffff8082111561352257600080fd5b61352e8c838d01612df1565b995060208b013591508082111561354457600080fd5b6135508c838d01612df1565b985060408b013591508082111561356657600080fd5b6135728c838d01612df1565b975060608b013591508082111561358857600080fd5b6135948c838d01612df1565b965060808b0135955060a08b01359150808211156135b157600080fd5b6135bd8c838d01612df1565b945060c08b01359150808211156135d357600080fd5b506135e08b828c01612df1565b92505060e089013590509295985092959890939650565b634e487b7160e01b600052601160045260246000fd5b60008261362a57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060018201613657576136576135f7565b5060010190565b828152604060208201526000612e7c6040830184612b99565b600082601f83011261368857600080fd5b8151613696612e1082612dc9565b8181528460208386010111156136ab57600080fd5b612e7c826020830160208701612b75565b6000606082840312156136ce57600080fd5b6040516060810167ffffffffffffffff82821081831117156136f2576136f2612ccc565b81604052829350845191508082111561370a57600080fd5b61371686838701613677565b8352602085015191508082111561372c57600080fd5b5061373985828601613677565b602083015250604083015160408201525092915050565b805161375b816132c2565b919050565b600060a0828403121561377257600080fd5b61377a612ce2565b90508151613787816132c2565b815260208201516007811061379b57600080fd5b6020820152604082015167ffffffffffffffff808211156137bb57600080fd5b6137c785838601613677565b604084015260608401519150808211156137e057600080fd5b506137ed84828501613677565b6060830152506080820151608082015292915050565b8051801515811461375b57600080fd5b600060a0828403121561382557600080fd5b61382d612ce2565b905061383882613803565b815261384660208301613803565b60208201526040820151604082015261386160608301613803565b60608201526080820151608082015292915050565b600067ffffffffffffffff82111561389057613890612ccc565b5060051b60200190565b6000608082840312156138ac57600080fd5b6138b4612d0b565b9050815167ffffffffffffffff808211156138ce57600080fd5b6138da85838601613677565b83526020915081840151828401526040840151818111156138fa57600080fd5b61390686828701613677565b60408501525060608401518181111561391e57600080fd5b8401601f8101861361392f57600080fd5b805161393d612e1082613876565b81815260059190911b8201840190848101908883111561395c57600080fd5b8584015b83811015613994578051868111156139785760008081fd5b6139868b8983890101613677565b845250918601918601613960565b50606087015250939695505050505050565b600061022082840312156139b957600080fd5b6139c1612d2e565b9050815167ffffffffffffffff808211156139db57600080fd5b6139e785838601613677565b835260208401519150808211156139fd57600080fd5b613a0985838601613677565b60208401526040840151915080821115613a2257600080fd5b613a2e85838601613677565b60408401526060840151915080821115613a4757600080fd5b613a5385838601613677565b60608401526080840151915080821115613a6c57600080fd5b613a7885838601613677565b608084015260a084015160a084015260c0840151915080821115613a9b57600080fd5b613aa7858386016136bc565b60c084015260e0840151915080821115613ac057600080fd5b613acc85838601613760565b60e084015261010091508184015181811115613ae757600080fd5b613af386828701613677565b838501525061012091508184015181811115613b0e57600080fd5b613b1a86828701613677565b838501525061014091508184015181811115613b3557600080fd5b613b4186828701613677565b83850152506101609150613b5785838601613813565b82840152610200840151915080821115613b7057600080fd5b50613b7d8482850161389a565b6101808301525092915050565b600060208284031215613b9c57600080fd5b815167ffffffffffffffff811115613bb357600080fd5b612e7c848285016139a6565b808202811582820484141761077e5761077e6135f7565b8082018082111561077e5761077e6135f7565b60006020808385031215613bfc57600080fd5b825167ffffffffffffffff80821115613c1457600080fd5b818501915085601f830112613c2857600080fd5b8151613c36612e1082613876565b81815260059190911b83018401908481019088831115613c5557600080fd5b8585015b83811015612f5a57805185811115613c715760008081fd5b613c7f8b89838a01016139a6565b845250918601918601613c59565b600082601f830112613c9e57600080fd5b81516020613cae612e1083613876565b82815260059290921b84018101918181019086841115613ccd57600080fd5b8286015b848110156128ab57805167ffffffffffffffff80821115613cf25760008081fd5b908801906040828b03601f1901811315613d0c5760008081fd5b613d14612d52565b8784015183811115613d265760008081fd5b613d348d8a83880101613760565b825250908301519082821115613d4a5760008081fd5b613d588c8984870101613760565b818901528652505050918301918301613cd1565b60006020808385031215613d7f57600080fd5b825167ffffffffffffffff80821115613d9757600080fd5b818501915085601f830112613dab57600080fd5b8151613db9612e1082613876565b81815260059190911b83018401908481019088831115613dd857600080fd5b8585015b83811015612f5a57805185811115613df357600080fd5b860160e0818c03601f19011215613e0a5760008081fd5b613e12612d75565b8882015187811115613e245760008081fd5b613e328d8b83860101613677565b82525060408083015188811115613e495760008081fd5b613e578e8c83870101613677565b8b8401525060608084015189811115613e705760008081fd5b613e7e8f8d83880101613677565b838501525060809150613e92828501613750565b9083015260a08381015189811115613eaa5760008081fd5b613eb88f8d83880101613677565b838501525060c09150613ecc828501613750565b9083015260e083015188811115613ee35760008081fd5b613ef18e8c83870101613c8d565b9183019190915250845250918601918601613ddc565b60008451613f19818460208901612b75565b7f40000000000000000000000000000000000000000000000000000000000000009083019081528451613f53816001840160208901612b75565b7f2600000000000000000000000000000000000000000000000000000000000000600192909101918201528351613f91816002840160208801612b75565b0160020195945050505050565b600060208284031215613fb057600080fd5b61105082613803565b60008251613fcb818460208701612b75565b7f20616c7265616479206578697374730000000000000000000000000000000000920191825250600f01919050565b60006020828403121561400c57600080fd5b5051919050565b600181811c9082168061402757607f821691505b60208210810361404757634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561409757600081815260208120601f850160051c810160208610156140745750805b601f850160051c820191505b8181101561409357828155600101614080565b5050505b505050565b815167ffffffffffffffff8111156140b6576140b6612ccc565b6140ca816140c48454614013565b8461404d565b602080601f8311600181146140ff57600084156140e75750858301515b600019600386901b1c1916600185901b178555614093565b600085815260208120601f198616915b8281101561412e5788860151825594840194600190910190840161410f565b508582101561414c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8381526060602082015260006141756060830185612b99565b9050826040830152949350505050565b6040815260006141986040830185612b99565b82810360208401526130d78185612b99565b7f4e6f7420466f756e642c2063757272656e74206b6579200000000000000000008152600083516141e2816017850160208801612b75565b7f2069732064697272656e742066726f6d20000000000000000000000000000000601791840191820152835161421f816028840160208801612b75565b01602801949350505050565b60008151608084526142406080850182612b99565b905060208084015181860152604084015185830360408701526142638382612b99565b925050606084015185830360608701528281518085528385019150838160051b860101848401935060005b82811015612f5a57601f198783030184526142aa828651612b99565b9486019493860193915060010161428e565b8381526060602082015260006142d56060830185612b99565b828103604084015261022084518183526142f182840182612b99565b9150506020850151828203602084015261430b8282612b99565b915050604085015182820360408401526143258282612b99565b9150506060850151828203606084015261433f8282612b99565b915050608085015182820360808401526143598282612b99565b91505060a085015160a083015260c085015182820360c084015261437d8282612e84565b91505060e085015182820360e08401526143978282612bc5565b91505061010080860151838303828501526143b28382612b99565b9250505061012080860151838303828501526143ce8382612b99565b9250505061014080860151838303828501526143ea8382612b99565b6101608881015180511515878301526020810151151561018088015260408101516101a0880152606081015115156101c088015260808101516101e088015291945092509050505061018085015182820361020084015261444b828261422b565b98975050505050505050565b60006020828403121561446957600080fd5b815167ffffffffffffffff81111561448057600080fd5b612e7c84828501613677565b6000602080838503121561449f57600080fd5b825167ffffffffffffffff8111156144b657600080fd5b8301601f810185136144c757600080fd5b80516144d5612e1082613876565b81815260059190911b820183019083810190878311156144f457600080fd5b928401925b8284101561451b57835161450c816132c2565b825292840192908401906144f9565b979650505050505050565b60006020828403121561453857600080fd5b815160ff8116811461105057600080fd5b6000825161455b818460208701612b75565b7f204c320000000000000000000000000000000000000000000000000000000000920191825250600301919050565b6000825161459c818460208701612b75565b7f4c00000000000000000000000000000000000000000000000000000000000000920191825250600101919050565b600083516145dd818460208801612b75565b7f3a000000000000000000000000000000000000000000000000000000000000009083019081528351614617816001840160208801612b75565b0160010194935050505056fea264697066735822122039f6b83f40fceef317399ce3651f8508bc5da1d6d332a558adc9383048b9a86f64736f6c63430008110033";

type ServiceNetworkConstructorParams =
  | [linkLibraryAddresses: ServiceNetworkLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ServiceNetworkConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ServiceNetwork__factory extends ContractFactory {
  constructor(...args: ServiceNetworkConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ServiceNetwork__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ServiceNetworkLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$06d508590a3822408fd121ace3cfe95d23\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/IterableNetworkMap.sol:IterableNetworkMap"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$162b54970ae4871b82ec7acaef59686faf\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libs/IterableBridgeMap.sol:IterableBridgeMap"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$76499cc972b9a0bb936d598f1efe85bd49\\$__", "g"),
      linkLibraryAddresses["contracts/libs/StringUtil.sol:StringUtil"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ServiceNetwork> {
    return super.deploy(overrides || {}) as Promise<ServiceNetwork>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ServiceNetwork {
    return super.attach(address) as ServiceNetwork;
  }
  connect(signer: Signer): ServiceNetwork__factory {
    return super.connect(signer) as ServiceNetwork__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ServiceNetworkInterface {
    return new utils.Interface(_abi) as ServiceNetworkInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ServiceNetwork {
    return new Contract(address, _abi, signerOrProvider) as ServiceNetwork;
  }
}

export interface ServiceNetworkLibraryAddresses {
  ["contracts/libs/IterableNetworkMap.sol:IterableNetworkMap"]: string;
  ["contracts/libs/IterableBridgeMap.sol:IterableBridgeMap"]: string;
  ["contracts/libs/StringUtil.sol:StringUtil"]: string;
}
