/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721, ERC721Interface } from "../ERC721";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "to",
        type: "address",
      },
      {
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "from",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
      {
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "owner",
        type: "address",
      },
      {
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506100276301ffc9a760e01b61004260201b60201c565b61003d6380ac58cd60e01b61004260201b60201c565b610110565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156100d357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b610dff8061011f6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80636352211e11610076578063a22cb4651161005b578063a22cb4651461023e578063b88d4fde1461026c578063e985e9c514610332576100be565b80636352211e146101e957806370a0823114610206576100be565b8063095ea7b3116100a7578063095ea7b31461014f57806323b872dd1461017d57806342842e0e146101b3576100be565b806301ffc9a7146100c3578063081812fc14610116575b600080fd5b610102600480360360208110156100d957600080fd5b50357fffffffff0000000000000000000000000000000000000000000000000000000016610360565b604080519115158252519081900360200190f35b6101336004803603602081101561012c57600080fd5b5035610397565b604080516001600160a01b039092168252519081900360200190f35b61017b6004803603604081101561016557600080fd5b506001600160a01b0381351690602001356103fc565b005b61017b6004803603606081101561019357600080fd5b506001600160a01b03813581169160208101359091169060400135610520565b61017b600480360360608110156101c957600080fd5b506001600160a01b03813581169160208101359091169060400135610578565b610133600480360360208110156101ff57600080fd5b5035610593565b61022c6004803603602081101561021c57600080fd5b50356001600160a01b03166105f0565b60408051918252519081900360200190f35b61017b6004803603604081101561025457600080fd5b506001600160a01b038135169060200135151561065b565b61017b6004803603608081101561028257600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156102bd57600080fd5b8201836020820111156102cf57600080fd5b803590602001918460018302840111640100000000831117156102f157600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061072a945050505050565b6101026004803603604081101561034857600080fd5b506001600160a01b0381358116916020013516610785565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60006103a2826107b3565b6103e057604051600160e51b62461bcd02815260040180806020018281038252602c815260200180610d2d602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b600061040782610593565b9050806001600160a01b0316836001600160a01b0316141561045d57604051600160e51b62461bcd028152600401808060200182810382526021815260200180610d826021913960400191505060405180910390fd5b336001600160a01b038216148061047957506104798133610785565b6104b757604051600160e51b62461bcd028152600401808060200182810382526038815260200180610ca26038913960400191505060405180910390fd5b600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b61052a33826107d0565b61056857604051600160e51b62461bcd028152600401808060200182810382526031815260200180610da36031913960400191505060405180910390fd5b610573838383610877565b505050565b6105738383836040518060200160405280600081525061072a565b6000818152600160205260408120546001600160a01b0316806105ea57604051600160e51b62461bcd028152600401808060200182810382526029815260200180610d046029913960400191505060405180910390fd5b92915050565b60006001600160a01b03821661063a57604051600160e51b62461bcd02815260040180806020018281038252602a815260200180610cda602a913960400191505060405180910390fd5b6001600160a01b03821660009081526003602052604090206105ea906109ce565b6001600160a01b0382163314156106bc5760408051600160e51b62461bcd02815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b610735848484610520565b610741848484846109d2565b61077f57604051600160e51b62461bcd028152600401808060200182810382526032815260200180610c206032913960400191505060405180910390fd5b50505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b60006107db826107b3565b61081957604051600160e51b62461bcd02815260040180806020018281038252602c815260200180610c76602c913960400191505060405180910390fd5b600061082483610593565b9050806001600160a01b0316846001600160a01b0316148061085f5750836001600160a01b031661085484610397565b6001600160a01b0316145b8061086f575061086f8185610785565b949350505050565b826001600160a01b031661088a82610593565b6001600160a01b0316146108d257604051600160e51b62461bcd028152600401808060200182810382526029815260200180610d596029913960400191505060405180910390fd5b6001600160a01b03821661091a57604051600160e51b62461bcd028152600401808060200182810382526024815260200180610c526024913960400191505060405180910390fd5b61092381610b4f565b6001600160a01b038316600090815260036020526040902061094490610b99565b6001600160a01b038216600090815260036020526040902061096590610bb0565b600081815260016020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b5490565b60006109e6846001600160a01b0316610bb9565b6109f25750600161086f565b6040517f150b7a0200000000000000000000000000000000000000000000000000000000815233600482018181526001600160a01b03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015610a85578181015183820152602001610a6d565b50505050905090810190601f168015610ab25780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015610ad457600080fd5b505af1158015610ae8573d6000803e3d6000fd5b505050506040513d6020811015610afe57600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a020000000000000000000000000000000000000000000000000000000014915050949350505050565b6000818152600260205260409020546001600160a01b031615610b96576000818152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff191690555b50565b8054610bac90600163ffffffff610bbf16565b9055565b80546001019055565b3b151590565b600082821115610c195760408051600160e51b62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b5090039056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a165627a7a723058203e890c3db55582f4ada4021a7c43798671c6c11fa113002874e47f8ec7dc84440029";

export class ERC721__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721> {
    return super.deploy(overrides || {}) as Promise<ERC721>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new utils.Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}
